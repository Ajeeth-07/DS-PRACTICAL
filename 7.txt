//binary search
#include<iostream>
using namespace std;


// to apply binary search using recursion
class binary{
    int n;
    int *ar;
    
    public:

    binary(){
        cout<<"Enter the size of the array"<<endl;
        cin>>n;
        ar=new int[n];
        cout<<"Enter the elements in the array in sorted order"<<endl;
        for(int i=0;i<n;i++){
            cin>>ar[i];
        }
    }
    private:
    int check(int st,int end,int key){
        // base case
        if(st>end || end<0){
            return -1;
        }
        int mid=(st+end)/2;
        if(ar[mid]==key){
            return mid;
        }

       else  if(ar[mid]>key){
            // search in the left part
            check(st,mid-1,key);
        }

        else if(ar[mid]<key){
            // search in the right part
            check(mid+1,end,key);
        }
        
    }
    public:
    int binarysearch(int key){
        return check(0,n-1,key);
    }
    void print(){
        cout<<"Elements of the array are : ";
        for(int i=0;i<n;i++){
            cout<<ar[i]<<" ";
        }
        cout<<endl;
    }


};

int main(){
    binary a;
   
    a.print();
     cout<<"Enter the key to be searched for"<<endl;
    int key;
    cin>>key;
    int ans=a.binarysearch(key);
    if(ans!=-1){
        cout<<key<<" is present at index "<<ans<<endl;
    }
    else{
        cout<<key<<" is not present in the array"<<endl;
    }

} 